ebs/settings.py
* AUTH_PASSWORD_VALIDATORS = tirei as restri√ß√µes de senha
* DATABASES = adicionei as configura√ß√µes do banco de dados
* LANGUAGE_CODE = troquei para 'pt-br'
* TIME_ZONE = troquei para 'America/Sao_Paulo'

cria√ß√£o do app
* python manage.py startapp ebs (antigo nome dispositivos)

ativar o app no django:
* settings.py
INSTALLED_APPS = [
    ...
    'dispositivos', (no caso √© ebs)
]

------------------------------------------------------------
CONFIGURA√á√ÉO E CRIAL√ÉO DA BASE DE DADOS

1 - MODELS ----> ebs/models.py
üîπ 1. Modelo: Cliente
üîπ 2. Modelo: Posto
üîπ 3. Modelo: M√©todo de Aquisi√ß√£o
üîπ 4. Modelo: Dispositivo

Ap√≥s a cria√ß√£o das models rodar: 
python manage.py makemigrations
python manage.py migrate

* obs: cada vez que precisar criar uma nova entidade, cria a model e depois roda os comandos 
de migrate acima
* obs2: e depois ir em admin.py para registrar as classes

2 - admin.py -> ebs/admin.py (todo conte√∫do est√° l√°)

3 - se tudo estiver configurado e completo, rodar: 
python manage.py runserver

-----------------------------------------------------------

Alterei o nome do campo M√©todo de Aquisi√ß√£o:
- ir em models.py e ir na classe correspondente e adicionar o meta class
class Meta:
        verbose_name = "M√©todo de Aquisi√ß√£o"
        verbose_name_plural = "M√©todo de Aquisi√ß√£o"

Obrigatoriedade nos campos: (ir em models.py)
| blank=True | Pode deixar em branco no formul√°rio (ex: admin) | ‚úÖ Opcional para o usu√°rio |
| null=True | Pode ser NULL no banco | ‚úÖ Opcional no banco de dados |
| blank=False | Campo obrigat√≥rio no formul√°rio | ‚ùå O usu√°rio precisa preencher |
| null=False | Campo obrigat√≥rio no banco | ‚ùå O banco precisa receber valor |

No caso para campos que s√£o select, a configura√ß√£o √©:
CONFIGURACAO_CHOICES = [
        ('VIVO', 'Vivo'),
        ('CLARO', 'Claro'),
        ('TIM', 'Tim'),
        ('OI', 'Oi'),
        ('ARQIA', 'Arquia'),
        ('OUTRO', 'Outro'),
    ]
    
    configuracao = models.CharField(
        max_length=20,
        choices=CONFIGURACAO_CHOICES,
        default='VIVO',
        blank=True,
        null=True,
    )

* OBS: sempre que modificar qualquer tipo de campo estrutural deve-se fazer os comandos:
python manage.py makemigrations
python manage.py migrate


------------------------------------------------------------

Se eu precisar criar uma "automatiza√ß√£o" que dispara em certos eventos, devo criar
na pasta ebs/signals.py

Ativar Signals e Middleware
- ir em apps.py na pasta ebs/apps.py
def ready(self):
    import dispositivos.signals

e em settings.py:
MIDDLEWARE = [
    ...
    'dispositivos.signals.CurrentUserMiddleware',
]

------------------------------------------------------------

pip install django-autocomplete-light -> para configurar visualiza√ß√£o postos apenas dos clientes


------------------------------------------------------------

Pagina√ß√£o:
- adicionar: 
list_per_page = 50

em ebs/admin.py em todas as classes

instala√ß√£o theme:
- pip install django-jet-reboot
- settings.py = INSTALLED_APPS = 'jet'
- urls.py:
    from django.urls import path, include
    path('jet/', include('jet.urls', 'jet')),  # Django Jet URLs
comandos:
    - python manage.py makemigrations
    - python manage.py migrate
configura√ß√£o de tema: 

    